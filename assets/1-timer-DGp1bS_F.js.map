{"version":3,"file":"1-timer-DGp1bS_F.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst refs = {\n  startBtn: document.querySelector('[data-start]'),\n  input: document.querySelector('#datetime-picker'),\n  daysSpan: document.querySelector('[data-days]'),\n  hoursSpan: document.querySelector('[data-hours]'),\n  minutesSpan: document.querySelector('[data-minutes]'),\n  secondsSpan: document.querySelector('[data-seconds]'),\n};\n\nrefs.startBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      refs.startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      refs.startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(refs.input, options);\n\nrefs.startBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  refs.startBtn.disabled = true;\n  refs.input.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const timeDiff = userSelectedDate - now;\n\n    if (timeDiff <= 0) {\n      clearInterval(timerId);\n      updateTimer(0);\n      refs.input.disabled = false;\n      return;\n    }\n\n    updateTimer(timeDiff);\n  }, 1000);\n});\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  refs.daysSpan.textContent = addLeadingZero(days);\n  refs.hoursSpan.textContent = addLeadingZero(hours);\n  refs.minutesSpan.textContent = addLeadingZero(minutes);\n  refs.secondsSpan.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["userSelectedDate","timerId","refs","options","selectedDates","selectedDate","iziToast","flatpickr","timeDiff","updateTimer","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"gDAMA,IAAIA,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAO,CACX,SAAU,SAAS,cAAc,cAAc,EAC/C,MAAO,SAAS,cAAc,kBAAkB,EAChD,SAAU,SAAS,cAAc,aAAa,EAC9C,UAAW,SAAS,cAAc,cAAc,EAChD,YAAa,SAAS,cAAc,gBAAgB,EACpD,YAAa,SAAS,cAAc,gBAAgB,CACtD,EAEAA,EAAK,SAAS,SAAW,GAEzB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDJ,EAAK,SAAS,SAAW,KAEzBF,EAAmBK,EACnBH,EAAK,SAAS,SAAW,GAE5B,CACH,EAEAK,EAAUL,EAAK,MAAOC,CAAO,EAE7BD,EAAK,SAAS,iBAAiB,QAAS,IAAM,CACvCF,IAELE,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,GAEtBD,EAAU,YAAY,IAAM,CAE1B,MAAMO,EAAWR,EADL,IAAI,KAGhB,GAAIQ,GAAY,EAAG,CACjB,cAAcP,CAAO,EACrBQ,EAAY,CAAC,EACbP,EAAK,MAAM,SAAW,GACtB,MACD,CAEDO,EAAYD,CAAQ,CACrB,EAAE,GAAI,EACT,CAAC,EAED,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDR,EAAK,SAAS,YAAcc,EAAeL,CAAI,EAC/CT,EAAK,UAAU,YAAcc,EAAeJ,CAAK,EACjDV,EAAK,YAAY,YAAcc,EAAeH,CAAO,EACrDX,EAAK,YAAY,YAAcc,EAAeF,CAAO,CACvD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}